# -*- coding: utf-8 -*-
"""cvhw1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W0nsTlkD5UaHT_omMJ2CLQWtRjNKYjUZ

Задание: Номинальное разрешение
                        

Для заданных изображений(figure1-6) определить номинальные разрешения (мм / пиксель). Каждое изображение записано в текстовый файл в формате:                        

    Максимальный размер объекта в миллиметрах по горизонтали
    #
    0 0 0
    0 0 0
    0 0 0
                                                

Изображение содержит только значения 0 или 1. Для чтения можно использовать функцию `open` или `np.loadtxt`.

Баллов: 3
"""

import numpy as np
import os
import matplotlib.pyplot as plt

filename = 'figure'
ending = '.txt'

for i in range(1,7):

    file = open(filename+str(i)+ending)
    width_mm = float(file.readline())
    lines = file.readlines()[1:]
    file.close()

    len_img = len(lines[0].split())

    resolution = width_mm/len_img
    print(f'Resolution for figure{i} = {resolution}, \n\tmax width in mm = {width_mm}, \t pixels width = {len_img}\n\n')

"""Задание: Определить смещение

Даны два изображения img1 и img2. Необходимо определить насколько одно изображение смещено относительно другого (выдать смещение y, x). Данные представлены в текстовом формате. Изображение содержит только значения 0 или 1.

Баллов: 2
"""

def read_img(filename):
    temp = []
    lines = open(filename).readlines()
    for line in lines[2:]:
        temp.append(line.split())

    return np.array(temp, dtype='int32')

def show_imgs(img1, img2):
    plt.subplot(1,2,1)
    plt.imshow(img1)
    plt.subplot(1,2,2)
    plt.imshow(img2)
    plt.show()

img1 = read_img('img1.txt')
img2 = read_img('img2.txt')

show_imgs(img1, img2)

img = img1+ img2
plt.imshow(img[30:70,30:80])
plt.colorbar()

def find_first_point(img):
    for y in range(img.shape[0]):
        for x in range(img.shape[1]):
            if img[y, x] == 1:
                return y, x

y1, x1 = find_first_point(img1)
y2, x2 = find_first_point(img2)

print(f'сдвиг по оси у = {y2-y1} и по оси х = {x2-x1}')